/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfa;

import controller.CustomerController;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Sandun
 */
public class Customer extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    public Customer() {
        try {
            initComponents();
            custtt.setModel(DbUtils.resultSetToTableModel(CustomerController.getAllCustomersAsResultSet()));
        } catch (SQLException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        custidText = new javax.swing.JTextField();
        custnameText = new javax.swing.JTextField();
        telnumText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        custsddText = new javax.swing.JTextArea();
        custaddBut = new javax.swing.JButton();
        cfcuttormr = new javax.swing.JButton();
        custUpdate = new javax.swing.JButton();
        custDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        custtt = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        customerSearchCombo = new javax.swing.JComboBox<>();
        customerSerachText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Customer");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(706, 19, 87, 22);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Customer ID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 210, 110, 20);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Customer Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 260, 140, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Address");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 320, 80, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Telephone number");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 430, 153, 20);

        custidText.setEditable(false);
        custidText.setBackground(new java.awt.Color(102, 153, 255));
        custidText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(custidText);
        custidText.setBounds(210, 200, 190, 30);

        custnameText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(custnameText);
        custnameText.setBounds(210, 250, 190, 30);

        telnumText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(telnumText);
        telnumText.setBounds(210, 430, 220, 30);

        custsddText.setColumns(20);
        custsddText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        custsddText.setRows(5);
        jScrollPane1.setViewportView(custsddText);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(210, 310, 230, 91);

        custaddBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        custaddBut.setText("Add");
        custaddBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custaddButActionPerformed(evt);
            }
        });
        getContentPane().add(custaddBut);
        custaddBut.setBounds(80, 520, 120, 40);

        cfcuttormr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cfcuttormr.setText("Clearfields");
        cfcuttormr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cfcuttormrActionPerformed(evt);
            }
        });
        getContentPane().add(cfcuttormr);
        cfcuttormr.setBounds(440, 520, 110, 40);

        custUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        custUpdate.setText("Update");
        custUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(custUpdate);
        custUpdate.setBounds(220, 520, 90, 40);

        custDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        custDelete.setText("Delete");
        custDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(custDelete);
        custDelete.setBounds(330, 520, 90, 40);

        custtt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "cust_id", "cust_name", "address", "tel_no"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        custtt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                custttMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(custtt);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(481, 191, 790, 296);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Search");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(142, 109, 70, 20);

        customerSearchCombo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        customerSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Telephone Number", "Customer Name" }));
        customerSearchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchComboActionPerformed(evt);
            }
        });
        getContentPane().add(customerSearchCombo);
        customerSearchCombo.setBounds(220, 100, 186, 26);

        customerSerachText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        customerSerachText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSerachTextActionPerformed(evt);
            }
        });
        customerSerachText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerSerachTextKeyTyped(evt);
            }
        });
        getContentPane().add(customerSerachText);
        customerSerachText.setBounds(430, 100, 250, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1220, 30, 100, 40);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backgrnd1.png"))); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(0, 0, 1366, 768);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void custaddButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custaddButActionPerformed

        String name = custnameText.getText();
        String address = custsddText.getText();
        String tel_no = telnumText.getText();
        model.Customer customer = new model.Customer(name, address, tel_no);

        try {
            int result = CustomerController.addCustomer(customer);

            if (result == 1) {
                JOptionPane.showMessageDialog(this, "Customer added successfully");
                clearfields();
                custtt.setModel(DbUtils.resultSetToTableModel(CustomerController.getAllCustomersAsResultSet()));
            } else {
                JOptionPane.showMessageDialog(this, "Customer cannot be added");

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Customer cannot be added");
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_custaddButActionPerformed

    private void cfcuttormrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cfcuttormrActionPerformed
        clearfields();
    }//GEN-LAST:event_cfcuttormrActionPerformed

    private void custDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custDeleteActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Do you want to DELETE this record?");
        if (x == 0) {
            Integer id = new Integer(custidText.getText());

            model.Customer customer = new model.Customer();
            customer.setCustomer_ID(id);
            int result;
            try {
                result = CustomerController.deleteCustomer(customer);
                if (result == 1) {
                    JOptionPane.showMessageDialog(this, "Succusfully deleted");
                    custtt.setModel(DbUtils.resultSetToTableModel(CustomerController.getAllCustomersAsResultSet()));
                    clearfields();

                }
            } catch (SQLException ex) {
                Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_custDeleteActionPerformed

    private void custUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custUpdateActionPerformed
        int id = new Integer(custidText.getText());
        String name = custnameText.getText();
        String address = custsddText.getText();
        String tel_no = telnumText.getText();
        model.Customer customer = new model.Customer(id, name, address, tel_no);

        try {
            int result = CustomerController.updateCustomer(customer);

            if (result == 1) {
                JOptionPane.showMessageDialog(this, "Customer updated successfully");
                custtt.setModel(DbUtils.resultSetToTableModel(CustomerController.getAllCustomersAsResultSet()));
                clearfields();
            } else {
                JOptionPane.showMessageDialog(this, "Customer cannot be updated");

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Customer cannot be updated");
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custUpdateActionPerformed

    private void custttMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_custttMouseClicked
        if (custtt.getSelectedRowCount() == 1) {
            custidText.setText(custtt.getValueAt(custtt.getSelectedRow(), 0).toString());
            custnameText.setText(custtt.getValueAt(custtt.getSelectedRow(), 1).toString());
            custsddText.setText(custtt.getValueAt(custtt.getSelectedRow(), 2).toString());
            telnumText.setText(custtt.getValueAt(custtt.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_custttMouseClicked

    private void customerSerachTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSerachTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerSerachTextActionPerformed

    private void customerSerachTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerSerachTextKeyTyped

        if (customerSearchCombo.getSelectedItem().toString().equalsIgnoreCase("telephone number")) {
            try {
                if (!customerSerachText.getText().isEmpty()) {
                    custtt.setModel(DbUtils.resultSetToTableModel(CustomerController.searchCustomerByTele(customerSerachText.getText())));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
            } 

        } else {
            try {
                custtt.setModel(DbUtils.resultSetToTableModel(CustomerController.searchCustomerByName(customerSerachText.getText())));
            } catch (SQLException ex) {
                Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_customerSerachTextKeyTyped

    private void customerSearchComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerSearchComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Delivery del = new Delivery();
        del.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clearfields() {

        custidText.setText("");
        custnameText.setText("");
        custsddText.setText("");
        telnumText.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cfcuttormr;
    private javax.swing.JButton custDelete;
    private javax.swing.JButton custUpdate;
    private javax.swing.JButton custaddBut;
    private javax.swing.JTextField custidText;
    private javax.swing.JTextField custnameText;
    private javax.swing.JComboBox<String> customerSearchCombo;
    private javax.swing.JTextField customerSerachText;
    private javax.swing.JTextArea custsddText;
    private javax.swing.JTable custtt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField telnumText;
    // End of variables declaration//GEN-END:variables
}
